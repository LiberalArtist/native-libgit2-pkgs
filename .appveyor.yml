image:
  - Visual Studio 2017
  - Ubuntu

platform:
  - x64
  - x86

environment:
  RACKET_VERSION: 7.2
  CYGPATH: cygpath -u # used by download-racket.sh on Windows
  RACKET_DIR: ~/racket # used by install-racket.sh on Ubuntu

############################################################################
# os- and sometimes platform-specific configuration

for:
  -
    matrix:
      only:
        - image: Visual Studio 2017
          platform: x64

    environment:
      PKG_DIR: libgit2-win32-x86_64

    before_build: &windows_before_build
      - git clone https://github.com/liberalartist/appveyor-racket.git C:\a-r
      - bash C:\a-r\download-racket.sh C:\install-racket.exe
      - C:\install-racket.exe /S /D=C:\racket
      - set PATH=%PATH%;C:\racket\

    before_test: &windows_before_test
      - raco pkg install -i --link %PKG_DIR%
        
  -
    matrix:
      only:
        - image: Visual Studio 2017
          platform: x86

    environment:
      PKG_DIR: libgit2-win32-i386

    before_build: *windows_before_build

    before_test: *windows_before_test
      
  -
    matrix:
      only:
        - image: Ubuntu
          platform: x64

    environment:
      PKG_DIR: libgit2-x86_64-linux
        
    before_build: &linux_before_build
      - git clone
      - branch i386 https://github.com/liberalartist/travis-racket.git ~/travis-racket
      - cat ~/travis-racket/install-racket.sh | bash # pipe to bash not sh!
      - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us

    before_test: &linux_before_test
      - raco pkg install -i --link "$PKG_DIR"
      
  -
    matrix:
      only:
        - image: Ubuntu
          platform: x86

    environment:
      PKG_DIR: libgit2-i386-linux
        
    before_build: *linux_before_build

    before_test: *linux_before_test
      
############################################################################
# get the src submodule
install:
  - git submodule init
  - git submodule update

# build libgit2
build_script:
  - racket make-libgit2.rkt

# test that the package works
test_script:
  - racket test-script.rkt

# save the build package
artifacts:
  - path: $(PKG_DIR)

